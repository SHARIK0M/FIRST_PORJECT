<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>


<main class="main-wrap">
    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Add New Product</h2>
                </div>
            </div>
            <div class="col-lg-12">
                <div class="card mb-4" style="background-color: #e6b3b3;">
                    <div class="card-header">
                        <h4>Basic Details</h4>
                    </div>
                    <div class="card-body">
                       <form method="post" id="product_form" class="form-add-product" 
                         action="/admin/add-product" enctype="multipart/form-data" 
                         onsubmit="return submitform(event, this)">

                            
                            <!-- Product Name -->
                            <div class="mb-4">
                                <label for="productName" class="form-label">Product Name</label>
                                <input type="text" placeholder="Enter product name" name="name" 
                                    class="form-control" id="productName" onchange="validate_productName()">
                                <h6 class="alertAddProduct mt-1 text-danger" id="productNameAlert"></h6>
                            </div>
                          <h6 class="alertAddProduct mt-1 text-danger" id="productNameError" style="display: none;"></h6>

                            <!-- Description -->
                            <div class="mb-4">
                                <label for="longdescription" class="form-label">Full Description</label>
                                <textarea placeholder="Enter product description" name="description" 
                                    id="longdescription" class="form-control" rows="5" 
                                    onchange="validate_description()"></textarea>
                                <h6 class="alertAddProduct mt-1 text-danger" id="longAlert"></h6>
                            </div>

                            <div class="row">
                                <!-- Price -->
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label for="price" class="form-label">Price (â‚¹)</label>
                                        <input type="number" placeholder="Enter price" name="price" 
                                            id="price" class="form-control">
                                        <h6 class="alertAddProduct mt-1 text-danger" id="priceAlert"></h6>
                                    </div>
                                </div>

                                <!-- Stock Quantity -->
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label for="Qty" class="form-label">Stock Quantity</label>
                                        <input type="number" placeholder="Enter quantity" name="stock" 
                                            id="Qty" class="form-control">
                                        <h6 class="alertAddProduct mt-1 text-danger" id="qtyAlert"></h6>
                                    </div>
                                </div>

                                <!-- Category Selection -->
                                <div class="col-lg-4">
                                    <label for="productCategory" class="form-label">Category</label>
                                    <select name="category" id="productCategory" class="form-select">
                                        {{#each category}}
                                        <option value="{{this._id}}">{{this.category}}</option>
                                        {{/each}}
                                    </select>
                                </div>
                            </div>

                            <!-- Image Uploads (5 Separate Sections) -->
                            <div class="row">
                                <!-- Image 1 -->
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label for="input1" class="form-label">Image 1</label>
                                        <input type="file" class="form-control" name="image" id="input1" 
                                            accept="image/png, image/jpeg, image/jpg" 
                                            onchange="viewImage(event, 1)">
                                        <img src="/assets/imgs/theme/upload.svg" alt="Upload Image" id="imgView1">
                                    </div>
                                </div>

                                <!-- Image 2 -->
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label for="input2" class="form-label">Image 2</label>
                                        <input type="file" class="form-control" name="image" id="input2" 
                                            accept="image/png, image/jpeg, image/jpg" 
                                            onchange="viewImage(event, 2)">
                                        <img src="/assets/imgs/theme/upload.svg" alt="Upload Image" id="imgView2">
                                    </div>
                                </div>

                                <!-- Image 3 -->
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label for="input3" class="form-label">Image 3</label>
                                        <input type="file" class="form-control" name="image" id="input3" 
                                            accept="image/png, image/jpeg, image/jpg" 
                                            onchange="viewImage(event, 3)">
                                        <img src="/assets/imgs/theme/upload.svg" alt="Upload Image" id="imgView3">
                                    </div>
                                </div>

                                <!-- Image 4 -->
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label for="input4" class="form-label">Image 4</label>
                                        <input type="file" class="form-control" name="image" id="input4" 
                                            accept="image/png, image/jpeg, image/jpg" 
                                            onchange="viewImage(event, 4)">
                                        <img src="/assets/imgs/theme/upload.svg" alt="Upload Image" id="imgView4">
                                    </div>
                                </div>

                                <!-- Image 5 -->
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label for="input5" class="form-label">Image 5</label>
                                        <input type="file" class="form-control" name="image" id="input5" 
                                            accept="image/png, image/jpeg, image/jpg" 
                                            onchange="viewImage(event, 5)">
                                        <img src="/assets/imgs/theme/upload.svg" alt="Upload Image" id="imgView5">
                                    </div>
                                </div>
                            </div>

                            <h6 id="imgAlert" class="mt-2 text-danger"></h6>

                            <!-- Submit & Back Buttons -->
                            <div class="d-flex g-2">
                                <div class="m-2">
                                    <button type="submit" class="btn btn-primary">Add Product</button>
                                </div>
                                <div class="m-2">
                                    <a href="/admin/product" class="btn btn-secondary">Back</a>
                                </div>
                            </div>

                        </form>
                    </div>
                </div> 
            </div>
        </div>
    </section> 
</main>


<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>



<script>
    // Function to display selected image
    function viewImage1(event) {
        document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0]);
    }

    // Function to handle image preview and cropping
    function viewImage(event, index) {
        let input = event.target;
        let reader = new FileReader();

        reader.onload = function () {
            let dataURL = reader.result;
            let image = document.getElementById('imgView' + index);
            image.src = dataURL;

            // Initialize Cropper.js
            let cropper = new Cropper(image, {
                aspectRatio: 1 / 1, 
                viewMode: 1,
                guides: true,
                background: false,
                autoCropArea: 1,
                zoomable: true
            });

            // Display cropped image container
            let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
            cropperContainer.style.display = 'block';

            // Save cropped image when button is clicked
            let saveButton = document.querySelector('#saveButton' + index);
            saveButton.addEventListener('click', async function () {
                let croppedCanvas = cropper.getCroppedCanvas();
                let croppedImage = document.getElementById("croppedImg" + index);
                croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);

                // Generate unique filename using timestamp
                let timestamp = new Date().getTime();
                let fileName = `cropped-img-${timestamp}-${index}.png`;

                await croppedCanvas.toBlob(blob => {
                    let input = document.getElementById('input' + index);
                    let imgFile = new File([blob], fileName, blob);
                    const fileList = new DataTransfer();
                    fileList.items.add(imgFile);
                    input.files = fileList.files;
                }); 
            });
        };
        reader.readAsDataURL(input.files[0]);
    }

    // Function to validate form inputs
    function Validation() {
        var errors = [];
        var fileInput = document.getElementById('input1');

        let productName = document.getElementById("productName").value;
        let longdescription = document.getElementById("longdescription").value;
        let Qty = document.getElementById("Qty").value;
        let price = document.getElementById("price").value;

        // Regular expressions for validation
        let productNameRegex = /^[a-zA-Z0-9\s\(\)\-\+]{4,}$/;
        let number = /^[1-9]\d*$/;
        let descriptionRegex = /^(?!\s*$)[\s\S]{1,1000}$/;

        // Alert elements
        let productNameAlert = document.getElementById("productNameAlert");
        let qtyAlert = document.getElementById("qtyAlert");
        let priceAlert = document.getElementById("priceAlert");
        let longAlert = document.getElementById("longAlert");
        let imgAlert = document.getElementById('imgAlert');

        // Validation checks
        if (!productName.match(productNameRegex)) {
            errors.push("Invalid product name");
        }

        if (!Qty.match(number)) {
            errors.push("Invalid quantity");
        }

        if (!price.match(number)) {
            errors.push("Invalid price");
        }

        if (!longdescription.match(descriptionRegex)) {
            errors.push("Invalid description");
        }

        if (fileInput.files.length === 0) {
            errors.push("Image required");
        }

        // Display error messages
        productNameAlert.innerHTML = errors.includes("Invalid product name") ? "Invalid product name" : "";
        qtyAlert.innerHTML = errors.includes("Invalid quantity") ? "Invalid quantity" : "";
        priceAlert.innerHTML = errors.includes("Invalid price") ? "Invalid price" : "";
        longAlert.innerHTML = errors.includes("Invalid description") ? "Invalid description" : "";
        imgAlert.innerHTML = errors.includes("Image required") ? "Image required" : "";

        return errors.length === 0; // Return true if no errors, false otherwise
    }
</script>

<script>
    $(document).ready(function () {
        // Handle back button click event
        $('#backbutton').click(function (e) {
            e.preventDefault();

            // Show confirmation alert before leaving the page
            Swal.fire({
                title: "Leave the page?",
                text: "The Data will not be saved",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#088178",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = "/admin/product";
                }
            });
        });
    });

function submitform(event, form) {
    event.preventDefault(); // âœ… Stop form from submitting normally

    if (Validation(form)) {
        Swal.fire({
            title: "Are you sure?",
            text: "Do you want to add the Product?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#088178",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes!"
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: 'POST',
                    url: form.action,
                    data: new FormData(form),
                    processData: false,
                    contentType: false,
                    dataType: "json", // âœ… Ensures the response is handled as JSON
                    success: function(response) {
                        Swal.fire({
                            title: "Saved!",
                            text: response.message, // âœ… Extract the message correctly
                            icon: "success",
                            confirmButtonText: "OK"
                        }).then(() => {
                            // âœ… Redirect after clicking "OK"
                            window.location.href = "/admin/product";
                        });
                    },
                    error: function(xhr) {
    if (xhr.status === 400) {
        $('#productNameError').text(xhr.responseJSON.error).show(); // âœ… Fix error display
    } else {
        Swal.fire({
            title: "Error",
            text: "Something went wrong! Please try again.",
            icon: "error",
            confirmButtonText: "OK"
        });
    }
}

                });
            }
        });
    }
}


</script>
