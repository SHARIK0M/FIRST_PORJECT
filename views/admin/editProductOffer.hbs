<main class="main-wrap">
    <section class="content-main">
        <div class="row justify-content-center align-items-center">
            <div class="col-10">
                <div class="content-header">
                    <h2 class="content-title">Edit Product Offer</h2>
                </div>
            </div>
            <div class="col-10 mt-5 justify-content-center">
                <div class="card">
                    <div class="card-body">
                        <form action="/admin/editProductOffer/{{editProductOfferData._id}}" id="editProductOfferForm" role="form"  method="post">
                            <input type="hidden" name="offerId" value="{{editProductOfferData._id}}" />
                            
                            <div class="modal-body">
                                <label for="productName" class="mb-2">Product Name:</label>
                                <select name="productName" id="productName" class="form-select">
                                    {{#each products}}
                                    <option value="{{this.name}}" {{#if (eq this.name ../editProductOfferData.productName)}}selected{{/if}}>
                                        {{this.name}}
                                    </option>
                                    {{/each}}
                                </select>

                                <div class="offerPercentageInput p-2">
                                    <label for="productOfferPercentage" class="mb-2">Product Offer Percentage: </label>
                                    <div class="input-group">
                                        <input id="productOfferPercentage" value="{{editProductOfferData.productOfferPercentage}}" name="productOfferPercentage" class="form-control" placeholder="Enter the offer percentage">
                                    </div>
                                    <div class="form-text">Choose a percentage to be discounted. Between 5% and 90%.</div>
                                </div>
                                
                                <div class="startDateInput p-2">
                                    <label for="startDate">Offer Start Date: </label>
                                    <div class="input-group">
                                        <input id="startDate" value="{{startDate}}" name="startDate" type="date" class="form-control">
                                    </div>
                                    <div class="form-text">Choose a start date for the offer to be considered.</div>
                                </div>

                                <div class="endDateInput p-2">
                                    <label for="endDate">Offer Expiry Date: </label>
                                    <div class="input-group">
                                        <input id="endDate" value="{{endDate}}" name="endDate" type="date" class="form-control">
                                    </div>
                                    <div class="form-text">Choose an expiry date for the offer to end.</div>
                                </div>
                            </div>

                            <div class="modal-footer">
                                <button id="backbutton" type="button" class="btn btn-secondary" data-bs-dismiss="modal">Back</button>
                                <button type="submit" class="btn btn-info">Save changes</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
    </section>


</main>

<script type="text/javascript" src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.10/dist/sweetalert2.min.js"></script>

<script>
    $(document).ready(function () {
        // Handle form submission
        $('#editProductOfferForm').on('submit', function (e) {
            e.preventDefault(); // Prevent default form submission

            const startDate = new Date($('#startDate').val());
            const endDate = new Date($('#endDate').val());
            const today = new Date();
            today.setHours(0, 0, 0, 0); // Reset time for accurate date comparison

            // Validate required fields
            if (!startDate || !endDate) {
                Swal.fire({
                    title: "Error!",
                    text: "Both start date and end date are required.",
                    icon: "error",
                    confirmButtonText: "OK"
                });
                return;
            }

            // Ensure start date is not in the past
            if (startDate < today) {
                Swal.fire({
                    title: "Invalid Start Date!",
                    text: "Start date cannot be in the past.",
                    icon: "error",
                    confirmButtonText: "OK"
                });
                return;
            }

            // Ensure end date is after the start date
            if (endDate <= startDate) {
                Swal.fire({
                    title: "Invalid End Date!",
                    text: "End date must be after the start date.",
                    icon: "error",
                    confirmButtonText: "OK"
                });
                return;
            }

            const formData = $(this).serialize(); // Serialize form data

            // Send AJAX request to update product offer
            $.ajax({
                url: '/admin/editProductOffer/{{editProductOfferData._id}}',
                type: 'POST',
                data: formData,
                success: function (response) {
                    Swal.fire({
                        title: "Success!",
                        text: response.message,
                        icon: "success",
                        confirmButtonText: "OK"
                    }).then(() => {
                        window.location.href = "/admin/productOffers"; // Redirect on success
                    });
                },
                error: function (xhr) {
                    const errorMessage = xhr.responseJSON?.message || "Something went wrong!";
                    Swal.fire({
                        title: "Error!",
                        text: errorMessage,
                        icon: "error",
                        confirmButtonText: "OK"
                    });
                }
            });
        });

        // Handle back button click event
        $('#backbutton').click(function (e) {
            e.preventDefault();
            Swal.fire({
                title: "Leave the Page?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#088178",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = "/admin/productOffers"; // Redirect on confirmation
                }
            });
        });
    });
</script>

