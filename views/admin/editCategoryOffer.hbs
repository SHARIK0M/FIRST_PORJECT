<main class="main-wrap">
    <section class="content-main">
        <div class="row justify-content-center align-items-center">
            
            <div class="col-lg-8 mt-5 justify-content-center">
                <div class="card">
                    <div class="card-body">
                        <div class="modal-header">
                    <h5 class="modal-title" id="addCategoryOfferModalLabel">Add Category Offer</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="addCategoryOfferForm" role="form" action="/admin/editCategoryOffer/{{editCategoryOfferData._id}}" method="post">
                    <div class="modal-body">

                        <div class="input-group mb-3">
                            <label class="container">
                                <label for="categoryName" class="mb-2" style="width: 100%";>Category Name: </label>
                                <select name="categoryName" id="categoryName" class="form-select">
                                    {{#each category}}
                                    <option value="{{this.category}}">{{this.category}}</option>
                                    {{/each}}
                                </select>
                            </label>
                        </div>

                        <div class="offerPercentageInput p-2">
                            <label for="categoryOfferPercentage" class="mb-2">Category Offer Percentage: </label>
                            <div class="input-group">
                                <input id="categoryOfferPercentage" name="categoryOfferPercentage" class="form-control"
                                    placeholder="Enter the offer percentage" value="{{editCategoryOfferData.categoryOfferPercentage}}">
                            </div>
                            <div class="form-text">Choose a percentage to be discounted. Between 5% and 90%.</div>
                        </div>

                        <div class="startDateInput p-2">
                            <label for="categoryOfferStartDate">Offer Start Date: </label>
                            <div class="input-group">
                                <input id="categoryOfferStartDate" name="categoryOfferStartDate" type="date" class="form-control" value="{{startDate}}">
                            </div>
                            <div class="form-text">Choose a start date for the offer to be considered.</div>
                        </div>

                        <div class="endDateInput p-2">
                            <label for="categoryOfferEndDate">Offer Expiry Date : </label>
                            <div class="input-group">
                                <input id="categoryOfferEndDate" name="categoryOfferEndDate" type="date" class="form-control" value="{{endDate}}">
                            </div>
                            <div class="form-text">Choose an expiry date for the offer to end.</div>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button id="backbutton" type="button" class="btn btn-secondary" data-bs-dismiss="modal">Back</button>
                        <button type="submit" class="btn btn-info">Save changes</button>
                    </div>
                </form>
            
                    </div>
                </div>
            </div>
    </section>
</main>

<script type="text/javascript" src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.10/dist/sweetalert2.min.js"></script>

<script>
    $(document).ready(function () {
        // Handle category offer form submission
        $('#addCategoryOfferForm').on('submit', function (e) {
            e.preventDefault();

            const startDate = new Date($('#categoryOfferStartDate').val());
            const endDate = new Date($('#categoryOfferEndDate').val());
            const today = new Date();
            today.setHours(0, 0, 0, 0); // Normalize today's date

            // Validate date inputs
            if (!startDate || !endDate) {
                Swal.fire({
                    title: "Error!",
                    text: "Both start date and end date are required.",
                    icon: "error",
                    confirmButtonText: "OK"
                });
                return;
            }

            if (startDate < today) {
                Swal.fire({
                    title: "Invalid Start Date!",
                    text: "Start date cannot be in the past.",
                    icon: "error",
                    confirmButtonText: "OK"
                });
                return;
            }

            if (endDate <= startDate) {
                Swal.fire({
                    title: "Invalid End Date!",
                    text: "End date must be after the start date.",
                    icon: "error",
                    confirmButtonText: "OK"
                });
                return;
            }

            // Serialize form data for submission
            const formData = $(this).serialize();

            // Submit form via AJAX
            $.ajax({
                url: '/admin/editCategoryOffer/{{editCategoryOfferData._id}}',
                type: 'POST',
                data: formData,
                success: function (response) {
                    Swal.fire({
                        title: "Success!",
                        text: response.message,
                        icon: "success",
                        confirmButtonText: "OK"
                    }).then(() => {
                        window.location.href = "/admin/categoryOffers";
                    });
                },
                error: function (xhr) {
                    const errorMessage = xhr.responseJSON?.message || "Something went wrong!";
                    Swal.fire({
                        title: "Error!",
                        text: errorMessage,
                        icon: "error",
                        confirmButtonText: "OK"
                    });
                }
            });
        });

        // Handle back button action
        $('#backbutton').click(function (e) {
            e.preventDefault();
            Swal.fire({
                title: "Leave the Page?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#088178",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = "/admin/categoryOffers";
                }
            });
        });
    });
</script>

