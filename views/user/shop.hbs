<main class="main">
    <div class="page-header breadcrumb-wrap">
        <div class="container">
            <div class="breadcrumb">
                <a href="/" rel="nofollow">Home</a>
                <span></span> Shop
            </div>
        </div>
    </div>
    <section class="mt-50 mb-50">
        <div class="container">
            <div class="row flex-row-reverse">
                <div class="col-lg-9">
                    <div class="shop-product-fillter">
                        <div id="totall-product">
                            <p> We found <strong id="count" class="text-brand">0</strong> items for you!</p>
                        </div>
                        <div class="sort-by-product-area">
                            <div class="sort-by-cover mr-10">
                                <div class="sort-by-product-wrap">
                                    <div class="sort-by">
                                        <span><i class="fi-rs-apps"></i>Show</span>
                                    </div>
                                    <div class="sort-by-dropdown-wrap">
                                        <span> <i class="fi-rs-angle-small-down"></i></span>
                                    </div>
                                </div>
                                <div class="sort-by-dropdown">
                                    <ul>
                                        <li><a onclick="limits(1)">1</a></li>
                                        <li><a onclick="limits(3)">3</a></li>
                                        <li><a onclick="limits(6)">6</a></li>
                                        <li><a onclick="limits(9)">9</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Product List -->
                    <span id="pro_container">
                        <div class="row product-grid-3" id="productList">
                            {{#if proData}}
                            <!-- Product data will be rendered here -->
                            {{else}}
                            <div>
                                <h2 class="m-5">No product available</h2>
                            </div>
                            {{/if}}
                        </div>
                    </span>
                    
                    <!-- Pagination -->
                    <div class="pagination-area mt-15 mb-sm-5 mb-lg-0">
                        <nav aria-label="Page navigation example">
                            <ul class="pagination justify-content-start" id="paginationList">
                                <!-- Pagination links will be dynamically added here -->
                            </ul>
                        </nav>
                    </div>
                </div>
                
                <!-- Sidebar with Category Filter -->
                <div class="col-lg-3 primary-sidebar sticky-sidebar">
                    <div class="widget-category mb-30">
                        <h5 class="section-title style-1 mb-30 wow fadeIn animated">Category</h5>
                        <ul class="categories">
                            {{#each loadCatData}}
                            <li>
                                <a onclick="filterByCategory('{{this._id}}')">{{this.category}}</a>
                            </li>
                            {{/each}}
                        </ul>
                    </div>
                     <!-- Fillter By Price -->
                    <div class="widget-category mb-30">
                        <h5 class="section-title style-1 mb-30 wow fadeIn animated">Sort</h5>
                        <ul style="background-color: #f3f2ee;  text-align: center;">
                            <li><a onclick="sortLowToHigh()">Price: Low to High</a></li>
                            <li><a onclick="sortHighToLow()">Price: High to Low</a></li>
                            <li><a onclick="sortAZ()">A - Z</a></li>
                            <li><a onclick="sortZA()">Z - A</a></li>
                            <li><a onclick="newArrivals()">New Arrivals</a></li>
                            <li><a onclick="popularity()">Popularity</a></li>
                        </ul>
                    </div>
                    <!-- Clear Filter Button -->
                    <button onclick="clearfilter()" class="btn btn-fill-out btn-block hover-up mb-30" name="login">Clear filter</button>
                </div>
            </div>
        </div>
    </section>
</main>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="/javascripts/products.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    let currentPage = 1;
let currentSort = '';
let currentCategory = '';
let searchQuery = '';
let limit = 6;

const fetchProducts = () => {
    $.ajax({
        url: '/search',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({
            searchQuery,
            sortOption: currentSort,
            categoryFilter: currentCategory,
            page: currentPage,
            limit,
        }),
        success: (data) => {
            updateProductList(data.products);
            updatePagination(data.totalProducts);
            updateProductCount(data.totalProducts);
        },
        error: (error) => console.error('Error fetching products:', error),
    });
};

const updateProductList = (products) => {
    const productList = $('#productList');
    productList.empty();

    if (products.length === 0) {
        productList.html('<h2 class="m-5">No product available</h2>');
        return;
    }

    products.forEach((product) => {
        const productHtml = `
            <div class="col-lg-4 col-md-4 col-12 col-sm-6">
                <div class="product-cart-wrap mb-30">
                    <div class="product-img-action-wrap">
                        <div class="product-img product-img-zoom">
                            <a href="/productDetails/${product._id}">
                                <img class="default-img" src="/assets/imgs/products/${product.imageUrl[0]}" alt="">
                                <img class="hover-img" src="/assets/imgs/products/${product.imageUrl[1]}" alt="">
                            </a>
                        </div>
                        
                        <div class="product-badges product-badges-position product-badges-mrg">
                            ${product.stock == 0 ? '<span class="hot">Out of stock</span>' : '<span class="hot">Hot</span>'}
                        </div>
                    </div>
                    <div class="product-content-wrap">
                        <div class="product-category">
                            <a href="#">${product.category.category}</a>
                        </div>
                        <h2><a href="/productDetails/${product._id}">${product.name}</a></h2>
                        <div class="product-price">
                            <span>â‚¹${product.price}</span>
                        </div>
                        <div class="product-action-1 show">
                            <a data-id="${product._id}" class="wish action-btn hover-up" href="#"><i class="fi-rs-heart"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        `;
        productList.append(productHtml);
    });
};

$(document).ready(function () {
    const userId = $('#userId').val() || localStorage.getItem('userId') || "";

    $('#productList').on('click', '.wish.action-btn', function (event) {
        event.preventDefault();
        var id = $(this).data('id');
        var wishButton = $(this);

        $.ajax({
            type: 'POST',
            url: '/checkwishlist', // API to check if product exists in wishlist
            contentType: 'application/json',
            data: JSON.stringify({ id: id, userId: userId }),
            success: (response) => {
                if (response.exists) {
                    Swal.fire('Info!', 'Product is already in your Wishlist!', 'info');
                } else {
                    // If not in wishlist, add to wishlist
                    $.ajax({
                        type: 'POST',
                        url: '/addtowishlist',
                        contentType: 'application/json',
                        data: JSON.stringify({ id: id, userId: userId }),
                        success: () => {
                            Swal.fire('Success!', 'Product added to Wishlist!', 'success');
                            wishButton.addClass('wishlist-added'); // Optional: Add a class to indicate it's added
                        },
                        error: () => Swal.fire('Error!', 'Failed to add product to Wishlist!', 'error')
                    });
                }
            },
            error: () => Swal.fire('Error!', 'Failed to check Wishlist!', 'error')
        });
    });

    $('.sort-by-dropdown ul li a').on('click', function (event) {
        event.preventDefault();
        const sortType = $(this).data('sort');
        if (sortType && typeof window[sortType] === 'function') {
            window[sortType]();
        }
    });
});

const updatePagination = (totalProducts) => {
    const paginationList = $('#paginationList');
    paginationList.empty();
    const totalPages = Math.ceil(totalProducts / limit);

    for (let i = 1; i <= totalPages; i++) {
        paginationList.append(`<li class="page-item ${i === currentPage ? 'active' : ''}">
            <a class="page-link" href="javascript:void(0);" onclick="goToPage(${i})">${i}</a>
        </li>`);
    }
};

const updateProductCount = (totalProducts) => $('#count').text(totalProducts);
const goToPage = (page) => { currentPage = page; fetchProducts(); };
const searchProducts = () => { searchQuery = $('#searchInput').val(); fetchProducts(); };
const sortLowToHigh = () => { currentSort = 'priceAsc'; fetchProducts(); };
const sortHighToLow = () => { currentSort = 'priceDesc'; fetchProducts(); };
const sortAZ = () => { currentSort = 'nameAsc'; fetchProducts(); };
const sortZA = () => { currentSort = 'nameDesc'; fetchProducts(); };
const newArrivals = () => { currentSort = 'newArrivals'; fetchProducts(); };
const popularity = () => { currentSort = 'popularity'; fetchProducts(); };
const filterByCategory = (categoryId) => { currentCategory = categoryId; fetchProducts(); };
const limits = (ct) => { limit = ct; currentPage = 1; fetchProducts(); };
const clearfilter = () => {
    currentPage = 1;
    currentSort = '';
    currentCategory = '';
    searchQuery = '';
    limit = 6;
    fetchProducts();
};

fetchProducts();

</script>